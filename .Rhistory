geom_point(size=4) +
theme_ipsum()+
xlab("Kiang Estimates")+
ylab("Number of Pashmina Goats")+
labs(color="Wealth Rank:")+
scale_color_manual(labels = c("Poor", "Moderately Well-off", "Well-off", "Very Well-off"),
values=c("#BB4444", "lightblue", "#77AADD", "#4477AA" ))+
theme_gray(base_size = 14)
plot
ggsave("E:/GIS/Amit's Social Analytics/Figures/plot.png" , width = 6, height = 4, units = c("in"), dpi = 330)
library(ggpubr)
combined_plot=ggarrange(plot, log_plot, ncol = 2, nrow = 1, common.legend = TRUE, legend = c("top"), labels = c("A", "B"))
library(tidyverse)
library(ggplot2)
Threat_Perception <- tibble(action = c("...... haven't done anything",
"...... maintain distance",
"...... inaction due to religious reasons",
"...... inaction due to wildlife department",
"...... have engaged in stoning"),
Proportion = c(52, 14, 10, 10, 14))
Threat_Perception$action <- factor(Threat_Perception$action, levels=c('...... have not done anything',
'...... maintain distance',
'...... inaction due to religious reasons',
'...... inaction due to wildlife department',
'...... have engaged in stoning'))
library(ggplot2)
library(gridExtra)
library(grid)
library(ggplot2)
library(lattice)
# create a dataset
specie <- c(rep("...have not done anything" , 4) ,
rep("...maintain distance" , 4) ,
rep("...inaction due to religious reasons" , 4) ,
rep("...inaction due to wildlife department" , 4),
rep("...have engaged in stoning" , 4))
condition <- rep(c("Poor" , "Moderately Well-off" , "Well-off", "Very Well-off") , 5)
value = c(1,4,4,2,0,2,1,0,0,2,0,0,0,1,1,0,1,0,1,1)
data <- data.frame(specie,condition, value)
#Turn your 'treatment' column into a character vector
data$specie <- as.character(data$specie)
#Then turn it back into a factor with the levels in the correct order
data$specie <- factor(data$specie, levels=unique(data$specie))
data$condition <- factor(data$condition, levels=unique(data$condition))
# Stacked + percent
ggplot(data, aes(fill=condition, y=value, x=specie)) +
geom_bar(position="fill", stat="identity")+
coord_flip()+
scale_fill_discrete(breaks=c("Very Well-off", "Well-off", "Moderately Well-off", "Poor"))+
scale_fill_manual(values=c("#BB4444", "lightblue", "#77AADD", "#4477AA"))+
guides(fill = guide_legend(title = "Wealth Rank"))
# Stacked + percent
p1=ggplot(data, aes(fill=condition, y=value, x=specie)) +
geom_bar(position="stack", stat="identity")+
coord_flip()+
scale_y_continuous(breaks=seq(0,11, by=1))+
scale_fill_discrete(breaks=c("Very Well-off", "Well-off", "Moderately Well-off", "Poor"))+
scale_fill_manual(values=c("#BB4444", "lightblue", "#77AADD", "#4477AA"))+
guides(fill = guide_legend(title = "Wealth Rank"))+
ylab("Number of Pasmina Goat")+
theme(legend.position = "top",
axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.x=element_text(size=12),
axis.text.y=element_text(size=12))
p1
View(data)
# Stacked + percent
ggplot(data, aes(fill=condition, y=value, x=specie)) +
geom_bar(position="fill", stat="identity")+
coord_flip()+
scale_fill_discrete(breaks=c("Very Well-off", "Well-off", "Moderately Well-off", "Poor"))+
scale_fill_manual(values=c("#BB4444", "lightblue", "#77AADD", "#4477AA"))+
guides(fill = guide_legend(title = "Wealth Rank"))
# Stacked + percent
p1=ggplot(data, aes(fill=condition, y=value, x=specie)) +
geom_bar(position="stack", stat="identity")+
coord_flip()+
scale_y_continuous(breaks=seq(0,11, by=1))+
scale_fill_discrete(breaks=c("Very Well-off", "Well-off", "Moderately Well-off", "Poor"))+
scale_fill_manual(values=c("#BB4444", "lightblue", "#77AADD", "#4477AA"))+
guides(fill = guide_legend(title = "Wealth Rank"))+
ylab("Number of Pasmina Goat")+
theme(legend.position = "top",
axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.x=element_text(size=12),
axis.text.y=element_text(size=12))
library(readxl)
library(leaps)
library(tidyverse)
data <- read_excel("E:/GIS/Amit's Social Analytics/Cleaned_dataset.xlsx")
data$`Wealth rank`=as.factor(data$`Wealth rank`)
data=data%>%
select(`Kiang count estimates_2`,`No. of pashmina goats`, `Wealth rank`, `Comments` )
data=na.omit(data)
# load ggplot2
library(ggplot2)
library(ggrepel)  # For geom_text_repel
library(hrbrthemes)  # For theme_ipsum
# Corrected plot code
plot <- ggplot(data, aes(x = `Kiang count estimates_2`,
y = `No. of pashmina goats`,
color = `Wealth rank`)) +
geom_point(size = 4) +
#geom_text(aes(label = Comments), hjust = 0, vjust = 1, color = "black", size = 4) +
geom_text_repel(aes(label = Comments), color = "black", size =3) +
theme_ipsum() +
xlab("Kiang Estimates") +
ylab("Number of Pashmina Goats") +
labs(color = "Wealth Rank:") +
scale_color_manual(labels = c("Poor", "Moderately Well-off", "Well-off", "Very Well-off"),
values = c("#BB4444", "lightblue", "#77AADD", "#4477AA")) +
theme_gray(base_size = 14)+
theme(legend.position="top")+
scale_x_continuous(breaks = seq(0, 3500, 300))
# Print the plot
print(plot)
plot
ggsave("E:/GIS/Amit's Social Analytics/Figures/plot_new.png" , width = 8, height = 6, units = c("in"), dpi = 330)
plot=ggplot(data, aes(x=(data$`Kiang count estimates_2`), y=data$`No. of pashmina goats`, color=data$`Wealth rank`)) +
geom_point(size=4) +
theme_ipsum()+
xlab("Kiang Estimates")+
ylab("Number of Pashmina Goats")+
labs(color="Wealth Rank:")+
scale_color_manual(labels = c("Poor", "Moderately Well-off", "Well-off", "Very Well-off"),
values=c("#BB4444", "lightblue", "#77AADD", "#4477AA" ))+
theme_gray(base_size = 14)
plot
ggsave("E:/GIS/Amit's Social Analytics/Figures/plot.png" , width = 6, height = 4, units = c("in"), dpi = 330)
library(ggpubr)
combined_plot=ggarrange(plot, log_plot, ncol = 2, nrow = 1, common.legend = TRUE, legend = c("top"), labels = c("A", "B"))
library(tidyverse)
library(ggplot2)
Threat_Perception <- tibble(action = c("...... haven't done anything",
"...... maintain distance",
"...... inaction due to religious reasons",
"...... inaction due to wildlife department",
"...... have engaged in stoning"),
Proportion = c(52, 14, 10, 10, 14))
Threat_Perception$action <- factor(Threat_Perception$action, levels=c('...... have not done anything',
'...... maintain distance',
'...... inaction due to religious reasons',
'...... inaction due to wildlife department',
'...... have engaged in stoning'))
library(ggplot2)
library(gridExtra)
library(grid)
library(ggplot2)
library(lattice)
# create a dataset
specie <- c(rep("...have not done anything" , 4) ,
rep("...maintain distance" , 4) ,
rep("...inaction due to religious reasons" , 4) ,
rep("...inaction due to wildlife department" , 4),
rep("...have engaged in stoning" , 4))
condition <- rep(c("Poor" , "Moderately Well-off" , "Well-off", "Very Well-off") , 5)
value = c(1,4,4,2,0,2,1,0,0,2,0,0,0,1,1,0,1,0,1,1)
data <- data.frame(specie,condition, value)
#Turn your 'treatment' column into a character vector
data$specie <- as.character(data$specie)
#Then turn it back into a factor with the levels in the correct order
data$specie <- factor(data$specie, levels=unique(data$specie))
data$condition <- factor(data$condition, levels=unique(data$condition))
# Stacked + percent
ggplot(data, aes(fill=condition, y=value, x=specie)) +
geom_bar(position="fill", stat="identity")+
coord_flip()+
scale_fill_discrete(breaks=c("Very Well-off", "Well-off", "Moderately Well-off", "Poor"))+
scale_fill_manual(values=c("#BB4444", "lightblue", "#77AADD", "#4477AA"))+
guides(fill = guide_legend(title = "Wealth Rank"))
# Stacked + percent
p1=ggplot(data, aes(fill=condition, y=value, x=specie)) +
geom_bar(position="stack", stat="identity")+
coord_flip()+
scale_y_continuous(breaks=seq(0,11, by=1))+
scale_fill_discrete(breaks=c("Very Well-off", "Well-off", "Moderately Well-off", "Poor"))+
scale_fill_manual(values=c("#BB4444", "lightblue", "#77AADD", "#4477AA"))+
guides(fill = guide_legend(title = "Wealth Rank"))+
ylab("Number of Pasmina Goat")+
theme(legend.position = "top",
axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.x=element_text(size=12),
axis.text.y=element_text(size=12))
p1
data$condition
data$value
data$specie
p1=ggplot(data, aes(fill=condition, y=value, x=data$specie)) +
geom_bar(position="stack", stat="identity")+
coord_flip()+
scale_y_continuous(breaks=seq(0,11, by=1))+
scale_fill_discrete(breaks=c("Very Well-off", "Well-off", "Moderately Well-off", "Poor"))+
scale_fill_manual(values=c("#BB4444", "lightblue", "#77AADD", "#4477AA"))+
guides(fill = guide_legend(title = "Wealth Rank"))+
ylab("Number of Pasmina Goat")+
theme(legend.position = "top",
axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.x=element_text(size=12),
axis.text.y=element_text(size=12))
p1
p1
Boxplot_figure_data <- read_excel("E:/GIS/Amit's Social Analytics/Boxplot_figure_data.xlsx")
View(Boxplot_figure_data)
library(readxl)
Boxplot_figure_data <- read_excel("E:/GIS/Amit's Social Analytics/Boxplot_figure_data.xlsx")
#Turn your 'treatment' column into a character vector
Boxplot_figure_data$Action <- as.character(Boxplot_figure_data$Action)
#Then turn it back into a factor with the levels in the correct order
Boxplot_figure_data$Action <- factor(Boxplot_figure_data$Action, levels=unique(Boxplot_figure_data$Action))
Boxplot_figure_data$Wealth_Rank_Name <- factor(Boxplot_figure_data$Wealth_Rank_Name, levels=unique(Boxplot_figure_data$Wealth_Rank_Name))
library(scales)
p2=ggplot(data = Boxplot_figure_data, aes(x=Action, y=No_of_pashmina_goats, color=Wealth_Rank_Name, fill=Wealth_Rank_Name))+
geom_boxplot()+
#geom_jitter(size=3)+
scale_color_discrete(breaks=c("Very Well-off", "Well-off", "Moderately Well-off", "Poor"))+
scale_color_manual(values=c("#BB4444", "lightblue", "#77AADD", "#4477AA"))+
guides(color = guide_legend(title = "Wealth Rank"))+
scale_fill_discrete(breaks=c("Very Well-off", "Well-off", "Moderately Well-off", "Poor"))+
scale_fill_manual(values=c("#BB4444", "lightblue", "#77AADD", "#4477AA"))+
guides(fill = guide_legend(title = "Wealth Rank"))+
ylab("No. of pasmina goats owned by the family")+
theme(legend.position = "top",
axis.title.x = element_blank(),
axis.title.y = element_text(size = 12),
axis.text.x=element_text(size=12),
axis.text.y=element_text(size=12))+
scale_x_discrete(labels = wrap_format(25))
p3=ggplot(data = Boxplot_figure_data, aes(x=Action, y=Kiang_count_estimates, color=Wealth_Rank_Name, fill=Wealth_Rank_Name))+
geom_boxplot()+
#geom_jitter(size=3)+
scale_color_discrete(breaks=c("Very Well-off", "Well-off", "Moderately Well-off", "Poor"))+
scale_color_manual(values=c("#BB4444", "lightblue", "#77AADD", "#4477AA"))+
guides(color = guide_legend(title = "Wealth Rank"))+
scale_fill_discrete(breaks=c("Very Well-off", "Well-off", "Moderately Well-off", "Poor"))+
scale_fill_manual(values=c("#BB4444", "lightblue", "#77AADD", "#4477AA"))+
guides(fill = guide_legend(title = "Wealth Rank"))+
ylab("Kiang count estimate by the family")+
theme(legend.position = "top",
axis.title.x = element_blank(),
axis.title.y = element_text(size = 12),
axis.text.x=element_text(size=12),
axis.text.y=element_text(size=12))+
scale_x_discrete(labels = wrap_format(15))
#theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1))
p2
library(ggpubr)
Fig_x=ggarrange(p1,p3,ncol = 1,  common.legend = TRUE, heights = c(0.7, 2))
Fig_x
ggsave("E:/GIS/Amit's Social Analytics/Figures/box_plots.png" , width = 10, height = 8, units = c("in"), dpi = 330)
p1
ggsave("E:/GIS/Amit's Social Analytics/Figures/row_plot.png" , width = 8, height = 4, units = c("in"), dpi = 330)
p3
ggsave("E:/GIS/Amit's Social Analytics/Figures/box_plot_p3.png" , width = 6, height = 4, units = c("in"), dpi = 330)
library(ggpubr)
Fig_x=ggarrange(p1,p3,ncol = 1,  common.legend = TRUE, heights = c(1, 2))
Fig_x
ggsave("E:/GIS/Amit's Social Analytics/Figures/box_plots.png" , width = 10, height = 8, units = c("in"), dpi = 330)
p1
ggsave("E:/GIS/Amit's Social Analytics/Figures/row_plot.png" , width = 8, height = 4, units = c("in"), dpi = 330)
p3
ggsave("E:/GIS/Amit's Social Analytics/Figures/box_plot_p3.png" , width = 6, height = 4, units = c("in"), dpi = 330)
library(readxl)
library(leaps)
library(tidyverse)
data <- read_excel("E:/GIS/Amit's Social Analytics/Cleaned_dataset.xlsx")
data$`Wealth rank`=as.factor(data$`Wealth rank`)
data=data%>%
select(`Kiang count estimates_2`,`No. of pashmina goats`, `Wealth rank`, `Comments` )
data=na.omit(data)
# load ggplot2
library(ggplot2)
library(ggrepel)  # For geom_text_repel
library(hrbrthemes)  # For theme_ipsum
# Corrected plot code
plot <- ggplot(data, aes(x = `Kiang count estimates_2`,
y = `No. of pashmina goats`,
color = `Wealth rank`)) +
geom_point(size = 4) +
#geom_text(aes(label = Comments), hjust = 0, vjust = 1, color = "black", size = 4) +
geom_text_repel(aes(label = Comments), color = "black", size =3) +
theme_ipsum() +
xlab("Kiang Estimates") +
ylab("Number of Pashmina Goats") +
labs(color = "Wealth Rank:") +
scale_color_manual(labels = c("Poor", "Moderately Well-off", "Well-off", "Very Well-off"),
values = c("#BB4444", "lightblue", "#77AADD", "#4477AA")) +
theme_gray(base_size = 14)+
theme(legend.position="top")+
scale_x_continuous(breaks = seq(0, 3500, 300))
# Print the plot
print(plot)
plot
ggsave("E:/GIS/Amit's Social Analytics/Figures/plot_new.png" , width = 8, height = 6, units = c("in"), dpi = 330)
plot=ggplot(data, aes(x=(data$`Kiang count estimates_2`), y=data$`No. of pashmina goats`, color=data$`Wealth rank`)) +
geom_point(size=4) +
theme_ipsum()+
xlab("Kiang Estimates")+
ylab("Number of Pashmina Goats")+
labs(color="Wealth Rank:")+
scale_color_manual(labels = c("Poor", "Moderately Well-off", "Well-off", "Very Well-off"),
values=c("#BB4444", "lightblue", "#77AADD", "#4477AA" ))+
theme_gray(base_size = 14)
plot
ggsave("E:/GIS/Amit's Social Analytics/Figures/plot.png" , width = 6, height = 4, units = c("in"), dpi = 330)
library(ggpubr)
combined_plot=ggarrange(plot, log_plot, ncol = 2, nrow = 1, common.legend = TRUE, legend = c("top"), labels = c("A", "B"))
library(tidyverse)
library(ggplot2)
Threat_Perception <- tibble(action = c("...... haven't done anything",
"...... maintain distance",
"...... religious reasons",
"...... wildlife department",
"...... have engaged in stoning"),
Proportion = c(52, 14, 10, 10, 14))
Threat_Perception$action <- factor(Threat_Perception$action, levels=c('...... have not done anything',
'...... maintain distance',
'...... religious reasons',
'...... wildlife department',
'...... have engaged in stoning'))
library(ggplot2)
library(gridExtra)
library(grid)
library(ggplot2)
library(lattice)
# create a dataset
specie <- c(rep("...have not done anything" , 4) ,
rep("...maintain distance" , 4) ,
rep("...religious reasons" , 4) ,
rep("...wildlife department" , 4),
rep("...have engaged in stoning" , 4))
condition <- rep(c("Poor" , "Moderately Well-off" , "Well-off", "Very Well-off") , 5)
value = c(1,4,4,2,0,2,1,0,0,2,0,0,0,1,1,0,1,0,1,1)
data <- data.frame(specie,condition, value)
#Turn your 'treatment' column into a character vector
data$specie <- as.character(data$specie)
#Then turn it back into a factor with the levels in the correct order
data$specie <- factor(data$specie, levels=unique(data$specie))
data$condition <- factor(data$condition, levels=unique(data$condition))
# Stacked + percent
ggplot(data, aes(fill=condition, y=value, x=specie)) +
geom_bar(position="fill", stat="identity")+
coord_flip()+
scale_fill_discrete(breaks=c("Very Well-off", "Well-off", "Moderately Well-off", "Poor"))+
scale_fill_manual(values=c("#BB4444", "lightblue", "#77AADD", "#4477AA"))+
guides(fill = guide_legend(title = "Wealth Rank"))
# Stacked + percent
p1=ggplot(data, aes(fill=condition, y=value, x=data$specie)) +
geom_bar(position="stack", stat="identity")+
coord_flip()+
scale_y_continuous(breaks=seq(0,11, by=1))+
scale_fill_discrete(breaks=c("Very Well-off", "Well-off", "Moderately Well-off", "Poor"))+
scale_fill_manual(values=c("#BB4444", "lightblue", "#77AADD", "#4477AA"))+
guides(fill = guide_legend(title = "Wealth Rank"))+
ylab("Number of Pasmina Goat")+
theme(legend.position = "top",
axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.x=element_text(size=12),
axis.text.y=element_text(size=12))
p1
library(readxl)
Boxplot_figure_data <- read_excel("E:/GIS/Amit's Social Analytics/Boxplot_figure_data.xlsx")
#Turn your 'treatment' column into a character vector
Boxplot_figure_data$Action <- as.character(Boxplot_figure_data$Action)
#Then turn it back into a factor with the levels in the correct order
Boxplot_figure_data$Action <- factor(Boxplot_figure_data$Action, levels=unique(Boxplot_figure_data$Action))
Boxplot_figure_data$Wealth_Rank_Name <- factor(Boxplot_figure_data$Wealth_Rank_Name, levels=unique(Boxplot_figure_data$Wealth_Rank_Name))
library(scales)
p2=ggplot(data = Boxplot_figure_data, aes(x=Action, y=No_of_pashmina_goats, color=Wealth_Rank_Name, fill=Wealth_Rank_Name))+
geom_boxplot()+
#geom_jitter(size=3)+
scale_color_discrete(breaks=c("Very Well-off", "Well-off", "Moderately Well-off", "Poor"))+
scale_color_manual(values=c("#BB4444", "lightblue", "#77AADD", "#4477AA"))+
guides(color = guide_legend(title = "Wealth Rank"))+
scale_fill_discrete(breaks=c("Very Well-off", "Well-off", "Moderately Well-off", "Poor"))+
scale_fill_manual(values=c("#BB4444", "lightblue", "#77AADD", "#4477AA"))+
guides(fill = guide_legend(title = "Wealth Rank"))+
ylab("No. of pasmina goats owned by the family")+
theme(legend.position = "top",
axis.title.x = element_blank(),
axis.title.y = element_text(size = 12),
axis.text.x=element_text(size=12),
axis.text.y=element_text(size=12))+
scale_x_discrete(labels = wrap_format(25))
p3=ggplot(data = Boxplot_figure_data, aes(x=Action, y=Kiang_count_estimates, color=Wealth_Rank_Name, fill=Wealth_Rank_Name))+
geom_boxplot()+
#geom_jitter(size=3)+
scale_color_discrete(breaks=c("Very Well-off", "Well-off", "Moderately Well-off", "Poor"))+
scale_color_manual(values=c("#BB4444", "lightblue", "#77AADD", "#4477AA"))+
guides(color = guide_legend(title = "Wealth Rank"))+
scale_fill_discrete(breaks=c("Very Well-off", "Well-off", "Moderately Well-off", "Poor"))+
scale_fill_manual(values=c("#BB4444", "lightblue", "#77AADD", "#4477AA"))+
guides(fill = guide_legend(title = "Wealth Rank"))+
ylab("Kiang count estimate by the family")+
theme(legend.position = "top",
axis.title.x = element_blank(),
axis.title.y = element_text(size = 12),
axis.text.x=element_text(size=12),
axis.text.y=element_text(size=12))+
scale_x_discrete(labels = wrap_format(15))
#theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1))
p2
library(ggpubr)
Fig_x=ggarrange(p1,p3,ncol = 1,  common.legend = TRUE, heights = c(1, 2))
Fig_x
ggsave("E:/GIS/Amit's Social Analytics/Figures/box_plots.png" , width = 10, height = 8, units = c("in"), dpi = 330)
p1
ggsave("E:/GIS/Amit's Social Analytics/Figures/row_plot.png" , width = 8, height = 4, units = c("in"), dpi = 330)
p3
ggsave("E:/GIS/Amit's Social Analytics/Figures/box_plot_p3.png" , width = 6, height = 4, units = c("in"), dpi = 330)
library(readxl)
library(tidyverse)
data <- read_excel("E:/GIS/Amit's Social Analytics/Cleaned_dataset.xlsx")%>%
mutate(Percapita_pashmina=`No. of pashmina goats`/`Total family members`)
fig_data=data%>%
select(`No. of pashmina goats`, `Wealth rank`)%>%
mutate(Percapita_pashmina=`No. of pashmina goats`/`Total family members`)
library(readxl)
library(leaps)
library(tidyverse)
data <- read_excel("E:/GIS/Amit's Social Analytics/Cleaned_dataset.xlsx")
regfit.full=regsubsets(`No. of pashmina goats`~.,data) #select the best model in terms of RSS
summary(regfit.full)
anova <- aov(`No. of pashmina goats`~.,data)
summary(anova)
#TukeyHSD(anova)
reg.summary=summary(regfit.full)
reg.summary
reg.summary$rsq
par(mfrow=c(2,2))
plot(reg.summary$rss,xlab="Number of Variables",ylab="RSS",type="l")
plot(reg.summary$adjr2,xlab="Number of Variables",ylab="Adjusted RSq",type="l")
which.max(reg.summary$adjr2)
points(2,reg.summary$adjr2[2], col="red",cex=2,pch=20)
plot(reg.summary$cp,xlab="Number of Variables",ylab="Cp",type='l')
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
# Library
library(ggplot2)
library(hrbrthemes)
library(ggpmisc)
library(ggpubr)
library(readxl)
library(tidyverse)
data <- read_excel("E:/GIS/Amit's Social Analytics/Cleaned_dataset.xlsx")%>%
mutate(`No. of pashmina goats per familiy member`=`No. of pashmina goats`/`Total family members`)%>%
mutate(`No. of eductaed members per family member`=`No. of eductaed members`/`Total family members`)
# Education VS Males
ED_vs_M= ggplot(data, aes(x=`No. of males`, y=`No. of eductaed members`)) +
geom_point() +
geom_smooth(method=lm , color="black", fill="skyblue", se=TRUE) +
stat_poly_eq(use_label(c("R2", "p")))+
xlab("No. of male members in a family ") +
ylab("No. of educated members in a family")
# Education VS Females
ED_vs_F=ggplot(data, aes(x=`No. of females`, y=`No. of eductaed members`)) +
geom_point() +
geom_smooth(method=lm , color="black", fill="skyblue", se=TRUE) +
stat_poly_eq(use_label(c("R2", "p")))+
xlab("No. of female members in a family ") +
ylab("No. of educated members in a family")
ggarrange(ED_vs_M,ED_vs_F, ncol = 2, nrow = 1)
View(data)
horse=c(1, 1, 1, 1,1,
2,
1,
1,
1,
1,
1,
1,
1,
0,
0,
1,
1,
1,
0,
1,
0)
sd(horse)
mean(horse)
round(mean(horse),1)
round(sd(horse),1)
yak=c(20,
2,
37,
18,
7,
15,
30,
15,
30,
20,
0,
15,
15,
0,
0,
0,
0,
13,
0,
11,
5)
mean(yak)
sd(yak)
round(sd(yak),1)
round(mean(yak),1)
